"""ZCM type definitions
This file automatically generated by zcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

from ZcmService import ZcmService

from ZcmCameraBaslerInformation import ZcmCameraBaslerInformation

class ZcmCameraBaslerJpegFrame(object):
    __slots__ = ["info", "synchronized", "timestamp_ns", "jpeg_size", "jpeg", "service"]

    def __init__(self):
        self.info = ZcmCameraBaslerInformation()
        self.synchronized = False
        self.timestamp_ns = 0
        self.jpeg_size = 0
        self.jpeg = ""
        self.service = ZcmService()

    def encode(self):
        buf = BytesIO()
        buf.write(ZcmCameraBaslerJpegFrame._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        assert self.info._get_packed_fingerprint() == ZcmCameraBaslerInformation._get_packed_fingerprint()
        self.info._encode_one(buf)
        buf.write(struct.pack(">bqi", self.synchronized, self.timestamp_ns, self.jpeg_size))
        buf.write(bytearray(self.jpeg[:self.jpeg_size]))
        assert self.service._get_packed_fingerprint() == ZcmService._get_packed_fingerprint()
        self.service._encode_one(buf)

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != ZcmCameraBaslerJpegFrame._get_packed_fingerprint():
            raise ValueError("Decode error")
        return ZcmCameraBaslerJpegFrame._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = ZcmCameraBaslerJpegFrame()
        self.info = ZcmCameraBaslerInformation._decode_one(buf)
        self.synchronized = bool(struct.unpack('b', buf.read(1))[0])
        self.timestamp_ns, self.jpeg_size = struct.unpack(">qi", buf.read(12))
        self.jpeg = buf.read(self.jpeg_size)
        self.service = ZcmService._decode_one(buf)
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if ZcmCameraBaslerJpegFrame in parents: return 0
        newparents = parents + [ZcmCameraBaslerJpegFrame]
        tmphash = (0x1092530b652debfe+ ZcmCameraBaslerInformation._get_hash_recursive(newparents)+ ZcmService._get_hash_recursive(newparents)) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + ((tmphash>>63)&0x1)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if ZcmCameraBaslerJpegFrame._packed_fingerprint is None:
            ZcmCameraBaslerJpegFrame._packed_fingerprint = struct.pack(">Q", ZcmCameraBaslerJpegFrame._get_hash_recursive([]))
        return ZcmCameraBaslerJpegFrame._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

